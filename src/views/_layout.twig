<!DOCTYPE html>
<html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta content="width=device-width, initial-scale=1.0" name="viewport">

        <!-- SEO tags -->
        <title>Gulp Twig Starter</title>
        <meta content="" name="description">

        <meta content="" property="og:title">
        <meta content="" property="og:image">
        <meta content="" property="og:type">
        <meta content="" property="og:url">

        <!-- GENERATE FAVICON: https://realfavicongenerator.net/ -->
        <link href="/img/favicons/apple-touch-icon.png" rel="apple-touch-icon" sizes="76x76">
        <link href="/img/favicons/favicon-32x32.png" rel="icon" sizes="32x32" type="image/png">
        <link href="/img/favicons/favicon-16x16.png" rel="icon" sizes="16x16" type="image/png">
        <link href="/img/favicons/site.webmanifest" rel="manifest">
        <link color="#000000" href="/img/favicons/safari-pinned-tab.svg" rel="mask-icon">
        <link href="/img/favicons/favicon.ico" rel="shortcut icon">
        <meta content="#000000" name="msapplication-TileColor">
        <meta content="/img/favicons/browserconfig.xml" name="msapplication-config">
        <meta content="#000000" name="theme-color">

        <!-- Main styles -->
        <link href="./css/main.css" rel="stylesheet">
    </head>
<body>
   {% block page %}{% endblock %}
   <script>
    const
        lazyImages = document.querySelectorAll('img[data-src],source[data-srcset'),
        windowHeight = document.documentElement.clientHeight;

        let lazyImagesPositions = [];

        const lazyScrollCheck = () => {
            let imgIndex = lazyImagesPositions.findIndex(
                item => pageYOffset > item - windowHeight
            );
            if (imgIndex >= 0) {
                if (lazyImages[imgIndex].dataset.src) {
                    lazyImages[imgIndex].src = lazyImages[imgIndex].dataset.src;
                    lazyImages[imgIndex].removeAttribute('data-src');
                } else if (lazyImages[imgIndex].dataset.srcset) {
                    lazyImages[imgIndex].srcset = lazyImages[imgIndex].dataset.srcset;
                    lazyImages[imgIndex].removeAttribute('data-srcset')
                }
                delete lazyImagesPositions[imgIndex]
            }
        }

        if (lazyImages.length > 0) {
        lazyImages.forEach(img => {
            if (img.dataset.src || img.dataset.srcset) {
            lazyImagesPositions.push(img.getBoundingClientRect().top + pageYOffset);
            lazyScrollCheck();
            }
        });
        }

        const lazyScroll = () => {
        if(document.querySelectorAll('img[data-src],source[data-srcset').length > 0) {
            lazyScrollCheck();
        }
        }


        window.addEventListener("scroll", lazyScroll);
        console.log(lazyImages);
   </script>
</body>
</html>
<!--#include virtual="/parts/navbar.html" -->